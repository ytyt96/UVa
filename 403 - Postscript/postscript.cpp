#include <iostream>
#include <string>
#include <sstream>
#include <cstdio>
#include <cstring>
#include <vector>

using namespace std;
vector<vector<vector<char>>> C1_font = {{{'A'}}, {{'B'}}, {{'C'}},
					   					{{'D'}}, {{'E'}}, {{'F'}},
									    {{'G'}}, {{'H'}}, {{'I'}},
										{{'J'}}, {{'K'}}, {{'L'}},
										{{'M'}}, {{'N'}}, {{'O'}},
										{{'P'}}, {{'Q'}}, {{'R'}},
										{{'S'}}, {{'T'}}, {{'U'}},
										{{'V'}}, {{'W'}}, {{'X'}},
										{{'Y'}}, {{'Z'}}, {{' '}},
										{{'.'}}, {{'*'}}, {{' '}}};

const vector<vector<vector<char>>> C5_font = {{{' ', '*', '*', '*', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
 							    			   {'*', '*', '*', '*', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '}},
  	    					    			  {{'*', '*', '*', '*', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', '*', '*', '*', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', '*', '*', '*', ' ', ' '}},
  	    					    			  {{' ', '*', '*', '*', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '},
  	    					    			   {' ', '*', '*', '*', '*', ' '}},
  	    					    			  {{'*', '*', '*', '*', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', '*', '*', '*', ' ', ' '}},
  	    					    			  {{'*', '*', '*', '*', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '},
  	    					    			   {'*', '*', '*', ' ', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '},
  	    					    			   {'*', '*', '*', '*', '*', ' '}},
  	    					    			  {{'*', '*', '*', '*', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '},
  	    					    			   {'*', '*', '*', ' ', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '}},
  	    					    			  {{' ', '*', '*', '*', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', ' ', ' '},
  	    					    			   {'*', ' ', ' ', '*', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {' ', '*', '*', '*', ' ', ' '}},
  	    					    			  {{'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', '*', '*', '*', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '},
  	    					    			   {'*', ' ', ' ', ' ', '*', ' '}},
							   				  {{'*', '*', '*', '*', '*', ' '},
							    			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {'*', '*', '*', '*', '*', ' '}},
							    			  {{' ', ' ', '*', '*', '*', ' '},
									           {' ', ' ', ' ', '*', ' ', ' '},
							     			   {' ', ' ', ' ', '*', ' ', ' '},
							     			   {'*', ' ', ' ', '*', ' ', ' '},
							     			   {' ', '*', '*', ' ', ' ', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', '*', ' ', ' '},
							     			   {'*', '*', '*', ' ', ' ', ' '},
							     			   {'*', ' ', ' ', '*', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '}},
							    			  {{'*', ' ', ' ', ' ', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', ' ', ' '},
							     			   {'*', '*', '*', '*', '*', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', '*', ' ', '*', '*', ' '},
							     			   {'*', ' ', '*', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', '*', ' ', ' ', '*', ' '},
							    			   {'*', ' ', '*', ' ', '*', ' '},
							     			   {'*', ' ', ' ', '*', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '}},
							   			      {{' ', '*', '*', '*', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
			 				     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {' ', '*', '*', '*', ' ', ' '}},
							    			  {{'*', '*', '*', '*', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', '*', '*', '*', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', ' ', ' '}},
							    			  {{' ', '*', '*', '*', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
						         			   {'*', ' ', ' ', '*', '*', ' '},
						 	     			   {' ', '*', '*', '*', '*', ' '}},
						 	    			  {{'*', '*', '*', '*', ' ', ' '},
						 	     			   {'*', ' ', ' ', ' ', '*', ' '},
						 	     			   {'*', '*', '*', '*', ' ', ' '},
							     			   {'*', ' ', ' ', '*', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '}},
							    			  {{' ', '*', '*', '*', '*', ' '},
							     			   {'*', ' ', ' ', ' ', ' ', ' '},
							     			   {' ', '*', '*', '*', ' ', ' '},
						      	 			   {' ', ' ', ' ', ' ', '*', ' '},
							     			   {'*', '*', '*', '*', ' ', ' '}},
							    			  {{'*', '*', '*', '*', '*', ' '},
							     			   {'*', ' ', '*', ' ', '*', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', '*', '*', '*', ' ', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
						         			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {' ', '*', '*', '*', ' ', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {' ', '*', ' ', '*', ' ', ' '},
							     			   {' ', '*', ' ', '*', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '},
							     			   {'*', ' ', '*', ' ', '*', ' '},
							     			   {'*', '*', ' ', '*', '*', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
							     			   {' ', '*', ' ', '*', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', '*', ' ', '*', ' ', ' '},
							     			   {'*', ' ', ' ', ' ', '*', ' '}},
							    			  {{'*', ' ', ' ', ' ', '*', ' '},
							     			   {' ', '*', ' ', '*', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '}},
							    			  {{'*', '*', '*', '*', '*', ' '},
							     			   {' ', ' ', ' ', '*', ' ', ' '},
							     			   {' ', ' ', '*', ' ', ' ', ' '},
							     			   {' ', '*', ' ', ' ', ' ', ' '},
							     			   {'*', '*', '*', '*', '*', ' '}},
							    			  {{' ', ' ', ' ', ' ', ' ', ' '},
							     			   {' ', ' ', ' ', ' ', ' ', ' '},
							     			   {' ', ' ', ' ', ' ', ' ', ' '},
							     			   {' ', ' ', ' ', ' ', ' ', ' '},
							     			   {' ', ' ', ' ', ' ', ' ', ' '}}};	

char page[60][60];

void print(const vector<vector<vector<char>>>& font, int index, int row, int column){
	for (int i = 0; i < font[0].size(); i++)
		for (int j = 0; j < font[0][0].size(); j++){
			int n_row = i + row, n_column = j + column;
			if (n_row >= 0 && n_row < 60 && n_column >= 0 && n_column < 60 && font[index][i][j] != ' ')
				page[n_row][n_column] = font[index][i][j];
		}
}

int get_index(char ch){
	if (ch >= 'A' && ch <= 'Z')
		return ch - 'A';
	if (ch == ' ')
		return 26;
	if (ch == '.')
		return 27;
	if (ch == '*')
		return 28;
	C1_font[29] = {{ch}};
	return 29;
}

string get_line(){
	char ch;
	string line;
	while (scanf("%c", &ch) && ch != '|')
		;
	while (scanf("%c", &ch) && ch != '|')
		line += ch;
	return line;
}
int main(){
	string cmd, font_name, line;
	int row, column;
	while (cin){
		memset(page, '.', sizeof(page));
		while (cin >> cmd && cmd != ".EOP"){
			cin >> font_name;
			const vector<vector<vector<char>>>& font = (font_name == "C1"? C1_font: C5_font);

			if (cmd == ".P"){
				scanf(" %d %d ", &row, &column);
				line = get_line();
			}
			else if (cmd == ".L"){
				scanf(" %d ", &row);
				line = get_line();
				column = 1;
			}
			else if (cmd == ".R"){
				scanf(" %d ", &row);
				line = get_line();
				column = 60 - (line.size()) * font[0][0].size() + 1;
			}
			else if (cmd == ".C"){
				scanf(" %d ", &row);
				line = get_line();
				int temp = (line.size()) * font[0][0].size();
				if (temp % 2)
					column = 31 - (temp / 2 + 1) + 1; 
				else
					column = 30 - temp / 2 + 1;
			}

			row--;
	   		column--;
			for (int i = 0; i < line.size(); i++)
				print(font, get_index(line[i]), row, column + (font[0][0].size() * i));
		}

		if (!cin)
			break;

		for (int i = 0; i < 60; i++){
			for (int j = 0; j < 60; j++)
				printf("%c", page[i][j]);
			printf("\n");
		}

		printf("\n");
		for (int i = 0; i < 60; i++)
			printf("-");
		printf("\n\n");
	}
	return 0;
}
